services:
  # Migration service - runs once to setup database
  migrate:
    build: ./backend
    container_name: tg_migrate
    env_file: .env
    environment:
      - DB_HOST=db
      - DB_PORT=5432
    command: python migrate_all.py
    depends_on:
      db:
        condition: service_healthy
    restart: "no"
    profiles:
      - migrate

  frontend:
    build: ./frontend
    container_name: tg_frontend
    ports:
      - "3000:80"
    depends_on:
      - api
    restart: unless-stopped

  api:
    build: ./backend
    container_name: tg_api
    env_file: .env
    environment:
      - DB_HOST=db
      - DB_PORT=5432
    ports:
      - "8000:8000"
    command: python -m uvicorn main:app --host 0.0.0.0 --port 8000
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/docs"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  worker:
    build: ./backend
    container_name: tg_worker
    env_file: .env
    environment:
      - DB_HOST=db
      - DB_PORT=5432
    command: python -m worker
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped

  db:
    image: postgres:16
    container_name: tg_postgres
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASS}
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: unless-stopped

volumes:
  pgdata:
